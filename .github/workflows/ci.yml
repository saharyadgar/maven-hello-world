# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "development" ]
  #pull_request:
    #branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3                      # checkout repo so workflow can access it
    
    - name: Set up JDK 8                             # set up jdk 8 to run maven
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: |
        cd my-app
        mvn -B release:update-versions                       # increase pom version
        mvn versions:set -DremoveSnapshot                    # remove -snapshot from artifact
        mvn package -f pom.xml                               # build jar artifact
      
    
    - name: Build and Push Image
      run: |
        export VERSION=$(cat my-app/pom.xml | grep version | head -1 | awk -F'[><]' '{print $3}')  # create env var to hold pom version
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "saharyadgar" --password-stdin  # login to dockerhub
        docker image build -t saharyadgar/sahar_repo:${VERSION} .  # build image with pom version number
        docker push saharyadgar/sahar_repo:${VERSION}
    
    - name: Update version of pom.xml                        # add, commit and push new pom.xml version to repo
      uses: EndBug/add-and-commit@v9
      with:
        author_name: saharyadgar
        author_email: saharyadgar12@gmail.com
        message: 'update the version of pom.xml'
        add: './my-app/pom.xml'

  deploy:
    needs: build
    runs-on: ubuntu-22.04

    steps:
    - name: Docker Pull && Run from Dockerhub
      uses: appleboy/ssh-action@master
      with:
        host: ec2-34-201-126-148.compute-1.amazonaws.com
        username: ${{ secrets.EC2_USER }}
        password: ${{ secrets.EC2_PASSWORD }}
        port: 22
        script: |
          cd proj/maven-hello-world
          git checkout development
          git pull git pull development master
          export VERSION=$(cat my-app/pom.xml | grep version | head -1 | awk -F'[><]' '{print $3}')
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "saharyadgar" --password-stdin
          docker run -d --name test saharyadgar/sahar_repo:${VERSION}
       

